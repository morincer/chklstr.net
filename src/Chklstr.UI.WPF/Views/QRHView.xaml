<views:MvxWpfView x:Class="Chklstr.UI.WPF.Views.QRHView" x:TypeArguments="viewModels:QRHViewModel"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  mc:Ignorable="d"
                  xmlns:viewModels="clr-namespace:Chklstr.UI.Core.ViewModels;assembly=Chklstr.UI.Core"
                  d:DataContext="{d:DesignInstance viewModels:QRHViewModel}"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:local="clr-namespace:Chklstr.UI.WPF.Views"
                  xmlns:utils="clr-namespace:Chklstr.UI.WPF.Utils">

    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <local:ChecklistItemTemplateSelector x:Key="ChecklistItemTemplateSelector" />
            <DataTemplate x:Key="TemplateSingleCheckItem" DataType="viewModels:ChecklistItemViewModel">
                <Grid HorizontalAlignment="Stretch" IsEnabled="{Binding IsEnabled}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding ListNumber}" />
                    <CheckBox Grid.Column="1" IsChecked="{Binding IsChecked}" />
                    <TextBlock Grid.Column="2" Text="{Binding Title}" TextWrapping="Wrap" />
                    <TextBlock Grid.Column="3" Text="{Binding Text}" TextAlignment="Right" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TemplateChecklist" DataType="viewModels:ChecklistItemViewModel">
                <Grid IsEnabled="{Binding IsEnabled}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="{Binding ListNumber}" />
                    <TextBlock Grid.Column="1" Text="-" />
                    <TextBlock Grid.Column="2" Text="{Binding Title}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TemplateSeparator" DataType="viewModels:ChecklistItemViewModel">
                <Separator HorizontalAlignment="Stretch" Width="2" />
            </DataTemplate>

            <utils:UppercaseConverter x:Key="UppercaseConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <utils:InvertableBooleanToVisibilityConverter x:Key="InvertableBooleanToVisibilityConverter" />
            <utils:ListToStringConverter x:Key="ListToStringConverter"/>

        </ResourceDictionary>
    </views:MvxWpfView.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="370" Width="2*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="3*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0" Grid.RowSpan="3"
                BorderBrush="{StaticResource BrushBorder}"
                BorderThickness="0 1 1 1">
            <Rectangle Fill="{StaticResource BrushBackgroundAlt2}" />
        </Border>
        <Rectangle Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Fill="{StaticResource BrushBackgroundAlt1}"></Rectangle>

        <Border Grid.Row="0" Grid.Column="0"
                BorderBrush="{StaticResource BrushBorder}" BorderThickness="0 0 0 1"
                Margin="10 0 10 0"
                MinHeight="35">
            <TextBlock TextWrapping="Wrap" Text="{Binding AircraftName, Converter={StaticResource UppercaseConverter}}"
                       Style="{StaticResource Header0}" />
        </Border>

        <ListBox Grid.Row="1" Grid.Column="0"
                 VerticalAlignment="Stretch"
                 HorizontalContentAlignment="Stretch"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.CanContentScroll="False"
                 SelectedItem="{Binding SelectedChecklist}"
                 ItemsSource="{Binding Checklists}"
                 Margin="10 20 10 0"
                 BorderBrush="{StaticResource BrushBorder}" BorderThickness="0 1 0 0"
                 Background="Transparent">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">

                    <Setter Property="VerticalAlignment" Value="Center"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="_Border"
                                        MinHeight="40"
                                        Padding="10 1 10 0"
                                        BorderBrush="{DynamicResource BrushBorder}"
                                        BorderThickness="0 0 0 1"
                                        SnapsToDevicePixels="true">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="_Border" Property="BorderBrush"
                                                Value="{DynamicResource BrushSelection}" />
                                        <Setter TargetName="_Border" Property="BorderThickness" Value="0 1 0 1" />
                                        <Setter TargetName="_Border" Property="Padding" Value="10 0 10 0" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="_Border" Property="Background"
                                                Value="{DynamicResource BrushBorder}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="FontFamily" Value="{DynamicResource MuliSemiBold}" />
                            <Setter Property="Foreground" Value="{DynamicResource BrushTextAlt2}" />
                            <Setter Property="FontSize" Value="14"></Setter>
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Style.Triggers>
                                <DataTrigger
                                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected }"
                                    Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource BrushSelection}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                    <Setter Property="Opacity" Value="0.3"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataTemplate.Resources>
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="30" />
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Rectangle Grid.ColumnSpan="3" Fill="Transparent"></Rectangle>
                        <TextBlock Grid.Column="0" Text="{Binding ListNumber}" Margin="0 0 10 0"></TextBlock>
                        <TextBlock TextWrapping="Wrap" Grid.Column="1"
                                   Text="{Binding Name, Converter={StaticResource UppercaseConverter}}" />

                        <Border Grid.Column="2"
                                Style="{DynamicResource NotAvailable}"
                                Visibility="{Binding IsEnabled, Converter={StaticResource InvertableBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                            <TextBlock>N/A</TextBlock>
                            <ToolTipService.InitialShowDelay>300</ToolTipService.InitialShowDelay>
                            <Border.ToolTip>
                                <ToolTip>
                                    <TextBlock FontSize="12">
                                        <TextBlock.Text >
                                            <MultiBinding StringFormat="Only available in contexts: {0}">
                                                <Binding Path="ApplicableContexts" 
                                                         Converter="{StaticResource ListToStringConverter}"
                                                         ConverterParameter=", "
                                                         />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </ToolTip>
                            </Border.ToolTip>
                        </Border>


                        <StackPanel Grid.Column="2" Orientation="Horizontal"
                                    Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="{Binding CheckedItemsCount}"></TextBlock>
                            <TextBlock>/</TextBlock>
                            <TextBlock Text="{Binding CheckableItemsCount}"></TextBlock>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <DockPanel Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch">
            <Border DockPanel.Dock="Top" HorizontalAlignment="Stretch"
                    BorderBrush="{DynamicResource BrushBorder}" BorderThickness="0 1 0 0" SnapsToDevicePixels="True">
                <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding Contexts}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Margin="10 10 10 0" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--<CheckBox Content="{Binding Name}" IsChecked="{Binding Selected}" />-->
                            <ToggleButton
                                Cursor="Hand"
                                Margin="0 0 10 10"
                                IsChecked="{Binding Selected}">
                                <ToggleButton.Content>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="8" Style="{DynamicResource Icon}"
                                                   Text="&#xf111;" />
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                </ToggleButton.Content>
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Name="_Border"
                                                Background="{DynamicResource BrushBackgroundAlt2}"
                                                BorderThickness="1"
                                                SnapsToDevicePixels="True"
                                                CornerRadius="5"
                                                Padding="10 2 10 2">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="_Border" Property="BorderBrush"
                                                        Value="{DynamicResource BrushOn}" />
                                                <Setter Property="Foreground" Value="{DynamicResource BrushOn}"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter TargetName="_Border" Property="BorderBrush"
                                                        Value="{DynamicResource BrushOff}" />
                                                <Setter Property="Foreground" Value="{DynamicResource BrushOff}"></Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>

            <Border DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" Padding="10"
                    BorderBrush="{DynamicResource BrushBorder}" BorderThickness="0 1 0 0">
                <Border.Resources>

                </Border.Resources>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                        <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource Icon}" Text="&#xf07c;" />
                                <TextBlock>Open</TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource Icon}" Text="&#xf044;" />
                                <TextBlock>Edit</TextBlock>
                            </StackPanel>
                        </Button>

                        <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource Icon}" Text="&#xf56e;" />
                                <TextBlock>Export</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <StackPanel Grid.Column="1">
                        <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{DynamicResource Icon}" Text="&#xf085;" />
                                <TextBlock>Settings</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </DockPanel>


        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Width="2"
                      ResizeBehavior="PreviousAndNext"
                      ResizeDirection="Columns" />

        <TabControl SelectedItem="{Binding SelectedChecklist}" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2"
                    Margin="0 -2 0 0" ItemsSource="{Binding Checklists}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabControl.ItemTemplate>
                <DataTemplate />
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate DataType="viewModels:ChecklistViewModel">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Name}" />
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                            <TextBlock Text="{Binding CheckedItemsCount}"></TextBlock>
                            <TextBlock> / </TextBlock>
                            <TextBlock Text="{Binding CheckableItemsCount}"></TextBlock>
                        </StackPanel>
                        <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 HorizontalContentAlignment="Stretch"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.CanContentScroll="False"
                                 ItemTemplateSelector="{StaticResource ChecklistItemTemplateSelector}"
                                 ItemsSource="{Binding Children}">
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                </Style>
                            </ListBox.ItemContainerStyle>

                        </ListBox>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>

        <DockPanel Grid.Column="2" Grid.Row="2">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal"
                        DockPanel.Dock="Bottom">
                <Button>Speak</Button>
                <Button>Skip</Button>
                <Button>Check</Button>
                <Button>Reset</Button>
            </StackPanel>
        </DockPanel>

    </Grid>
</views:MvxWpfView>