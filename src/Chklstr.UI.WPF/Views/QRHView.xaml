<views:MvxWpfView x:Class="Chklstr.UI.WPF.Views.QRHView" x:TypeArguments="viewModels:QRHViewModel"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  mc:Ignorable="d"
                  xmlns:viewModels="clr-namespace:Chklstr.UI.Core.ViewModels;assembly=Chklstr.UI.Core"
                  d:DataContext="{d:DesignInstance viewModels:QRHViewModel}"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:local="clr-namespace:Chklstr.UI.WPF.Views"
                  xmlns:utils="clr-namespace:Chklstr.UI.WPF.Utils"
                  xmlns:controls="clr-namespace:Chklstr.UI.WPF.Controls">

    <views:MvxWpfView.Resources>
        <ResourceDictionary>
            <utils:UppercaseConverter x:Key="UppercaseConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <utils:InvertableBooleanToVisibilityConverter x:Key="InvertableBooleanToVisibilityConverter" />
            <utils:ListToStringConverter x:Key="ListToStringConverter" />
            <utils:HasItemsToVisibilityConverter x:Key="HasItemsToVisibilityConverter" />
            <local:ChecklistItemTemplateSelector x:Key="ChecklistItemTemplateSelector" />
            <utils:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />


            <!-- TEMPLATE SINGLE CHECK -->
            <DataTemplate x:Key="TemplateSingleCheckItem" DataType="viewModels:ChecklistItemViewModel">
                <DataTemplate.Resources>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger
                                Binding="{Binding IsChecked}"
                                Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource BrushChecked}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataTemplate.Resources>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Stretch" IsEnabled="{Binding IsEnabled}" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="20" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding ListNumber}" VerticalAlignment="Center" />
                        <CheckBox Grid.Column="1" Style="{StaticResource RoundCheckbox}"
                                  Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                  IsChecked="{Binding IsChecked}"
                                  VerticalAlignment="Center"
                                  Margin="20 0 0 0" />
                        <TextBlock Grid.Column="2" VerticalAlignment="Center" Margin="20 0 0 0" Text="{Binding Title}"
                                   TextWrapping="Wrap" />
                        <TextBlock Margin="0 0 20 0" Grid.Column="3"
                                   VerticalAlignment="Center"
                                   Visibility="{Binding ApplicableContexts, Converter={StaticResource HasItemsToVisibilityConverter}}">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="/ {0} /">
                                    <Binding
                                        Path="ApplicableContexts"
                                        Converter="{StaticResource ListToStringConverter}"
                                        ConverterParameter=" / " />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Grid.Column="4" VerticalAlignment="Center" Text="{Binding Text}"
                                   TextAlignment="Right" />
                    </Grid>
                    <controls:MarkdownScrollViewerEx Grid.Row="1"
                                                     Foreground="Black"
                                                     MarkdownStyleName="Compact"
                                                     Padding="20 10 10 10"
                                                     HorizontalScrollBarVisibility="Disabled"
                                                     VerticalScrollBarVisibility="Disabled"
                                                     Markdown="{Binding DescriptionMarkdown}"
                                                     Visibility="{Binding DescriptionMarkdown, Converter={StaticResource StringToVisibilityConverter}}" />
                </Grid>
            </DataTemplate>

            <!-- TEMPLATE SECTION -->
            <DataTemplate x:Key="TemplateChecklist" DataType="viewModels:ChecklistItemViewModel">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border
                        SnapsToDevicePixels="True"
                        BorderBrush="{StaticResource BrushBorderChecklist}" BorderThickness="0 2 0 1"
                        Margin="-10 -5 -10 -5"
                        Padding="10 5 10 5">
                        <Grid IsEnabled="{Binding IsEnabled}"
                              VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="20" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding ListNumber}"
                                       FontSize="14" FontWeight="Bold" />
                            <TextBlock Grid.Column="1" Text="{Binding Title}"
                                       FontSize="14" FontWeight="Bold"
                                       Margin="20 0 20 0" />
                            <TextBlock Grid.Column="2">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="/ {0} /">
                                        <Binding
                                            Path="ApplicableContexts"
                                            Converter="{StaticResource ListToStringConverter}"
                                            ConverterParameter=" / " />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <Border Grid.Column="3"
                                    Margin="20 0 0 0"
                                    Style="{DynamicResource NotAvailable}"
                                    Visibility="{Binding IsEnabled, Converter={StaticResource InvertableBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                                <TextBlock>N/A</TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <!--<controls:MarkdownScrollViewerEx Grid.Row="1"
                                                     MarkdownStyle="{StaticResource DocumentStyleCompact}"
                                                     Foreground="Black"
                                                     Padding="20 10 10 10"
                                                     HorizontalScrollBarVisibility="Disabled"
                                                     VerticalScrollBarVisibility="Disabled"
                                                     Markdown="{Binding DescriptionMarkdown}"
                                                     Visibility="{Binding DescriptionMarkdown, Converter={StaticResource StringToVisibilityConverter}}" />-->
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="TemplateSeparator" DataType="viewModels:ChecklistItemViewModel">
                <Separator HorizontalAlignment="Stretch" Width="2" />
            </DataTemplate>


        </ResourceDictionary>
    </views:MvxWpfView.Resources>

    <Grid> <!-- MAIN GRID -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="370" Width="2*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="3*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0"
                BorderBrush="{StaticResource BrushBorder}"
                Background="{StaticResource BrushBackgroundAlt2}"
                BorderThickness="0 1 1 1">
            <!-- MAIN NAV GRID -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" /> <!-- TITLE ROW-->
                    <RowDefinition Height="*" /> <!-- CHECKLISTS ROW-->
                    <RowDefinition Height="Auto" /> <!-- CONTEXTS ROW-->
                    <RowDefinition Height="62" /> <!-- BUTTONS ROW -->
                </Grid.RowDefinitions>

                <!-- AIRCRAFT TITLE -->
                <Border Grid.Row="0"
                        BorderBrush="{StaticResource BrushBorder}" BorderThickness="0 0 0 1"
                        Margin="10 0 10 0"
                        MinHeight="35">
                    <TextBlock TextWrapping="Wrap"
                               Text="{Binding AircraftName, Converter={StaticResource UppercaseConverter}}"
                               Style="{StaticResource Header0}" />
                </Border>

                <!-- CHECKLISTS NAV -->
                <ListBox Grid.Row="1"
                         VerticalAlignment="Stretch"
                         HorizontalContentAlignment="Stretch"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.CanContentScroll="False"
                         SelectedItem="{Binding SelectedChecklist}"
                         ItemsSource="{Binding Checklists}"
                         Margin="10 20 10 0"
                         BorderBrush="{StaticResource BrushBorder}" BorderThickness="0 1 0 0"
                         Background="Transparent">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border Name="_Border"
                                                MinHeight="40"
                                                Padding="10 1 10 0"
                                                BorderBrush="{DynamicResource BrushBorder}"
                                                BorderThickness="0 0 0 1"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="_Border" Property="BorderBrush"
                                                        Value="{DynamicResource BrushSelection}" />
                                                <Setter TargetName="_Border" Property="BorderThickness" Value="0 1 0 1" />
                                                <Setter TargetName="_Border" Property="Padding" Value="10 0 10 0" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="_Border" Property="Background"
                                                        Value="{DynamicResource BrushBorder}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <DataTemplate.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily" Value="{DynamicResource MuliSemiBold}" />
                                    <Setter Property="Foreground" Value="{DynamicResource BrushTextAlt2}" />
                                    <Setter Property="FontSize" Value="14"></Setter>
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected }"
                                            Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource BrushSelection}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                            <Setter Property="Opacity" Value="0.3"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataTemplate.Resources>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="30" />
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.ColumnSpan="3" Fill="Transparent"></Rectangle>
                                <TextBlock Grid.Column="0" Text="{Binding ListNumber}" Margin="0 0 10 0"></TextBlock>
                                <TextBlock TextWrapping="Wrap" Grid.Column="1"
                                           Text="{Binding Name, Converter={StaticResource UppercaseConverter}}" />

                                <Border Grid.Column="2"
                                        Style="{DynamicResource NotAvailable}"
                                        Visibility="{Binding IsEnabled, Converter={StaticResource InvertableBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                                    <TextBlock>N/A</TextBlock>
                                    <ToolTipService.InitialShowDelay>300</ToolTipService.InitialShowDelay>
                                    <Border.ToolTip>
                                        <ToolTip>
                                            <TextBlock FontSize="12">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="Only available in contexts: {0}">
                                                        <Binding Path="ApplicableContexts"
                                                                 Converter="{StaticResource ListToStringConverter}"
                                                                 ConverterParameter=", " />
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </ToolTip>
                                    </Border.ToolTip>
                                </Border>


                                <StackPanel Grid.Column="2" Orientation="Horizontal"
                                            Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <TextBlock Text="{Binding CheckedItemsCount}"></TextBlock>
                                    <TextBlock>/</TextBlock>
                                    <TextBlock Text="{Binding CheckableItemsCount}"></TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <!-- CONTEXTS -->
                <Border Grid.Row="2" HorizontalAlignment="Stretch"
                        BorderBrush="{DynamicResource BrushBorder}" BorderThickness="0 1 0 1"
                        SnapsToDevicePixels="True">
                    <ItemsControl HorizontalAlignment="Stretch" ItemsSource="{Binding Contexts}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Margin="10 10 10 0" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--<CheckBox Content="{Binding Name}" IsChecked="{Binding Selected}" />-->
                                <ToggleButton
                                    Cursor="Hand"
                                    Margin="0 0 10 10"
                                    IsChecked="{Binding Selected}">
                                    <ToggleButton.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="8" Style="{DynamicResource Icon}"
                                                       Text="&#xf111;" />
                                            <TextBlock Text="{Binding Name}" />
                                        </StackPanel>
                                    </ToggleButton.Content>
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Name="_Border"
                                                    Background="{DynamicResource BrushBackgroundAlt2}"
                                                    BorderThickness="1"
                                                    SnapsToDevicePixels="True"
                                                    CornerRadius="5"
                                                    Padding="10 2 10 2">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter TargetName="_Border" Property="BorderBrush"
                                                            Value="{DynamicResource BrushOn}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource BrushOn}"></Setter>
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter TargetName="_Border" Property="BorderBrush"
                                                            Value="{DynamicResource BrushOff}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource BrushOff}"></Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>

                <!-- BUTTONS -->
                <Border Grid.Row="3" HorizontalAlignment="Stretch" Padding="10"
                        BorderBrush="{DynamicResource BrushBorder}" BorderThickness="0 0 0 0">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                            <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{DynamicResource Icon}" Text="&#xf07c;" />
                                    <TextBlock>Open</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{DynamicResource Icon}" Text="&#xf044;" />
                                    <TextBlock>Edit</TextBlock>
                                </StackPanel>
                            </Button>

                            <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{DynamicResource Icon}" Text="&#xf56e;" />
                                    <TextBlock>Export</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <Button Style="{DynamicResource Flat}" Margin="0 0 5 0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{DynamicResource Icon}" Text="&#xf085;" />
                                    <TextBlock>Settings</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Border>

            </Grid>
        </Border>

        <GridSplitter Grid.Column="1" Width="2"
                      ResizeBehavior="PreviousAndNext"
                      ResizeDirection="Columns" />
        <!-- CHECKLISTS CONTAINER -->
        <TabControl
            x:Name="TabControl_Checklists"
            SelectedItem="{Binding SelectedChecklist}" Grid.Column="2" Grid.Row="0"
            Background="{StaticResource BrushBackgroundAlt1}"
            BorderThickness="1 1 0 0"
            BorderBrush="{DynamicResource BrushBorder}"
            SnapsToDevicePixels="True"
            Margin="0 -2 0 0" ItemsSource="{Binding Checklists}">
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </TabControl.ItemContainerStyle>
            <TabControl.ItemTemplate>
                <DataTemplate />
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate DataType="viewModels:ChecklistViewModel">
                    <!-- CHECKLIST -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="60" />
                        </Grid.RowDefinitions>

                        <!-- CHECKLIST TITLE -->
                        <Border Grid.Row="0" Grid.Column="0"
                                BorderBrush="{StaticResource BrushBorder}"
                                BorderThickness="0 0 0 1"
                                SnapsToDevicePixels="True"
                                MinHeight="33"
                                Padding="20 0 20 0">
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Foreground" Value="{DynamicResource BrushTextAlt1}" />
                                </Style>
                            </Border.Resources>
                            <DockPanel>
                                <TextBlock Text="{Binding Name}" DockPanel.Dock="Left"
                                           FontFamily="{StaticResource MuliBold}" FontSize="21" />
                                <TextBlock DockPanel.Dock="Right" TextAlignment="Right" VerticalAlignment="Center"
                                           FontFamily="{StaticResource MuliRegular}" FontSize="16">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} / {1}">
                                            <Binding Path="CheckedItemsCount"></Binding>
                                            <Binding Path="CheckableItemsCount"></Binding>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DockPanel>
                        </Border>

                        <!-- CHECKLIST ITEMS -->
                        <ListBox Grid.Row="1"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 HorizontalContentAlignment="Stretch"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.CanContentScroll="False"
                                 BorderBrush="{StaticResource BrushBorder}"
                                 BorderThickness="1"
                                 Margin="20 20 20 0"
                                 Padding="5 10 5 0"
                                 FontFamily="{StaticResource MuliRegular}"
                                 FontSize="12"
                                 Foreground="{StaticResource BrushTextChecklistItem}"
                                 SelectedItem="{Binding SelectedItem}"
                                 ItemTemplateSelector="{StaticResource ChecklistItemTemplateSelector}"
                                 ItemsSource="{Binding Children}">
                            <ListBox.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="5 5 0 0" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                </Style>
                            </ListBox.Resources>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem"
                                       d:DataContext="{d:DesignInstance viewModels:ChecklistItemViewModel}">
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}" />
                                    <Setter Property="Focusable" Value="{Binding IsSelectable}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border Name="_Border"
                                                        MinHeight="50"
                                                        Padding="10 5 10 5"
                                                        BorderBrush="{DynamicResource BrushBorderChecklist}"
                                                        BorderThickness="0 0 0 1"
                                                        SnapsToDevicePixels="true"
                                                        VerticalAlignment="Center">
                                                    <ContentPresenter Name="_ContentPresenter" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                                        <Setter Property="IsSelected" Value="True" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsSelected" Value="true">
                                                        <Setter TargetName="_Border" Property="BorderBrush"
                                                                Value="{DynamicResource BrushSelection}" />
                                                        <Setter TargetName="_Border" Property="BorderThickness"
                                                                Value="1 1 1 1" />
                                                        <Setter TargetName="_Border" Property="Padding"
                                                                Value="9 4 9 5" />
                                                        <Setter TargetName="_ContentPresenter"
                                                                Property="TextBlock.Foreground"
                                                                Value="{StaticResource BrushSelection}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="_Border" Property="Background"
                                                                Value="{DynamicResource BrushBorder}" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter TargetName="_Border" Property="Opacity" Value="0.5"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>

                        </ListBox>

                        <!-- CHECKLIST BUTTONS -->
                        <Border Grid.Row="2" Padding="10 10 5 10" Margin="20 0 20 10"
                                CornerRadius="0 0 5 5"
                                VerticalAlignment="Center"
                                BorderBrush="{DynamicResource BrushBorder}" BorderThickness="1 0 1 1">
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Orientation="Horizontal">
                                <Button Style="{DynamicResource ChecklistButton}"
                                        BorderBrush="{DynamicResource BrushButtonSpeak}"
                                        Background="{DynamicResource BrushButtonSpeak}">
                                    Speak
                                </Button>
                                <Button Style="{DynamicResource ChecklistButton}"
                                        BorderBrush="{DynamicResource BrushButtonSkip}"
                                        Background="{DynamicResource BrushButtonSkip}"
                                        IsEnabled="{Binding CanCheckAndAdvance}"
                                        Command="{Binding SkipCommand}"
                                        >
                                    Skip
                                </Button>
                                <Button Style="{DynamicResource ChecklistButton}"
                                        BorderBrush="{DynamicResource BrushButtonCheck}"
                                        Background="{DynamicResource BrushButtonCheck}"
                                        Command="{Binding CheckAndAdvanceCommand}"
                                        IsEnabled="{Binding CanCheckAndAdvance}">
                                    Check
                                </Button>
                                <Button Style="{DynamicResource ChecklistButton}"
                                        BorderBrush="{DynamicResource BrushButtonReset}"
                                        Background="{DynamicResource BrushButtonReset}">
                                    Reset
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </Grid>
</views:MvxWpfView>