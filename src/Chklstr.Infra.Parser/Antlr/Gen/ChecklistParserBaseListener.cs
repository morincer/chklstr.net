//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:/Workspace/chklstr.net/src/Chklstr.Infra.Parser\ChecklistParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Chklstr.Infra.Parser.Antlr.Gen {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IChecklistParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ChecklistParserBaseListener : IChecklistParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.doc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoc([NotNull] ChecklistParser.DocContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.doc"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoc([NotNull] ChecklistParser.DocContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTitle([NotNull] ChecklistParser.TitleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.title"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTitle([NotNull] ChecklistParser.TitleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.contexts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContexts([NotNull] ChecklistParser.ContextsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.contexts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContexts([NotNull] ChecklistParser.ContextsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_header([NotNull] ChecklistParser.Cmd_headerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_header([NotNull] ChecklistParser.Cmd_headerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd([NotNull] ChecklistParser.CmdContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd([NotNull] ChecklistParser.CmdContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_checklist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_checklist([NotNull] ChecklistParser.Cmd_checklistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_checklist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_checklist([NotNull] ChecklistParser.Cmd_checklistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_checklist_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_checklist_item([NotNull] ChecklistParser.Cmd_checklist_itemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_checklist_item"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_checklist_item([NotNull] ChecklistParser.Cmd_checklist_itemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.checklist_item_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChecklist_item_name([NotNull] ChecklistParser.Checklist_item_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.checklist_item_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChecklist_item_name([NotNull] ChecklistParser.Checklist_item_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.checklist_item_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChecklist_item_value([NotNull] ChecklistParser.Checklist_item_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.checklist_item_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChecklist_item_value([NotNull] ChecklistParser.Checklist_item_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_sublist_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_sublist_start([NotNull] ChecklistParser.Cmd_sublist_startContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_sublist_start"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_sublist_start([NotNull] ChecklistParser.Cmd_sublist_startContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_sublist_end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_sublist_end([NotNull] ChecklistParser.Cmd_sublist_endContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_sublist_end"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_sublist_end([NotNull] ChecklistParser.Cmd_sublist_endContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_docstring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_docstring([NotNull] ChecklistParser.Cmd_docstringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_docstring"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_docstring([NotNull] ChecklistParser.Cmd_docstringContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ChecklistParser.cmd_separator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCmd_separator([NotNull] ChecklistParser.Cmd_separatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ChecklistParser.cmd_separator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCmd_separator([NotNull] ChecklistParser.Cmd_separatorContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Chklstr.Infra.Parser.Antlr.Gen
